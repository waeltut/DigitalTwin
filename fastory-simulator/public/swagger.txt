
{"swagger":"2.0","info":{"title":"eScopRTU API","description":"This is a common description of REST API for all eScop devices. The document\ndescribes eScopRTU API. The other devices like eScop SimpleIO and eScop Service Manager\nuses subset of of functions from this API.\nThe description of the devices and their functions\nis provided in deliverable D3.4 Physical layer specification.\n<BR>\nThe eScopRTU REST API provides for basic resources\n* /data\n* /notifs\n* /events\n* /services\n\nThe */data* resources are used to access the RAW data from the underlying physical device. \nThey are meant for reading and writing directly to the I/Os or control algorithm.\n<BR>\nThe */notifs* (notifications) resource is meant for managing all the subscription for various\nresources on the device. One can find list of all notifications.\n<BR>\nThe content of */events* resource depends on the current device configuration.\nIt provides access to the all evens defined in the services which are running\non the eScopRTU.\n<BR>\nThe */services* resource contains list of available services on the RTU. These\nservices can managed by SERVICE MANAGER. New service can be described e.q. using\nStructured Text Language (STL). Specification of the service description is part \nof the deliverable D3.4 Physical layer specifications.\n","version":"2.0.0"},"host":"127.0.0.1:3000","schemes":["http"],"basePath":"/RTU/CNV7","consumes":["application/json"],"produces":["application/json","text/html"],"paths":{"/data/{dataID}":{"get":{"summary":"Read value","description":"Read value of the data point defined by parameter {dataID}.","operationId":"readValue","parameters":[{"in":"path","name":"dataID","description":"Path to data point separated by slash or void for root.","type":"string"}],"responses":{"200":{"description":"Return DataValue object","schema":{"$ref":"#/definitions/DataValue"}},"303":{"description":"Data point has NO value, redirect to /info to get description!"},"default":{"description":"Data point doesn't exist!"}}},"put":{"summary":"Write value","description":"Write value of the data point defined by parameter {dataID}. It means that the {dataID} resource will be updated, that why PUT is used.","operationId":"writeValue","parameters":[{"in":"path","name":"dataID","description":"Path to data point separated by slash or void for root.","type":"string","required":true},{"in":"body","name":"dataValue","required":true,"description":"Value which will be set to the data point. It will convert the value parameter according the data point type.","schema":{"$ref":"#/definitions/DataValue"}}],"responses":{"200":{"description":"Data written succesfully"},"400":{"description":"Datapoint has no value see /info for description."},"403":{"description":"Writing is not allowed to the datapoint"},"404":{"description":"Data point doesn't exist!"},"500":{"description":"Writing data failed due to the server error","schema":{"$ref":"#/definitions/Message"}}}}},"/data/{dataID}/info":{"get":{"summary":"Get data point info","description":"Retrieve information about given data point. This is used especially for browsing","operationId":"getInfo","parameters":[{"in":"path","name":"dataID","description":"Path to data point separated by slash or void for root.","type":"string","required":true}],"responses":{"200":{"description":"Return DataInfo object.","schema":{"$ref":"#/definitions/DataInfo"}},"default":{"description":"Data point doesn't exist"}}}},"/data/{dataID}/notifs":{"get":{"summary":"Get notifications list","description":"Get list of all registered notifications","operationId":"getNotifications","parameters":[{"in":"path","name":"dataID","description":"Path to data point separated by slash or void for root.","type":"string","required":true}],"responses":{"200":{"description":"Return NodeInfo object with all notifications in children object","schema":{"$ref":"#/definitions/NodeInfo"}},"500":{"description":"Getting notification list failed due to the server error.","schema":{"$ref":"#/definitions/Message"}}}},"post":{"summary":"Add new notification","description":"Subscribe for new notification","operationId":"subscribe","parameters":[{"in":"path","name":"dataID","description":"Path to data point separated by slash or void for root.","type":"string","required":true},{"in":"body","name":"notif","description":"New notification data","schema":{"$ref":"#/definitions/Notification"},"required":true}],"responses":{"201":{"description":"New notification added.","schema":{"$ref":"#/definitions/Notification"}},"400":{"description":"Source URL or URLs does not exist."},"500":{"description":"Registering notification failed due to the server error!","schema":{"$ref":"#/definitions/Message"}}}}},"/data/{dataID}/notifs/{notifID}":{"get":{"summary":"Get a specific notification.","operationId":"getNotification","parameters":[{"in":"path","name":"dataID","description":"Path to data point separated by slash or void for root.","type":"string","required":true},{"in":"path","name":"notifID","description":"The ID of the notification to retrieve.","type":"string","required":true}],"responses":{"200":{"description":"Return selected Notification object","schema":{"$ref":"#/definitions/Notification"}},"404":{"description":"Notification {name} doesn't exist!"}}},"delete":{"summary":"Remove a notification","description":"Unsubscribe selected notification","operationId":"unSubscribe","parameters":[{"in":"path","name":"dataID","description":"Path to data point separated by slash or void for root.","type":"string","required":true},{"in":"path","name":"notifID","description":"The ID of the notification to delete.","type":"string","required":true}],"responses":{"204":{"description":"Notification removed succesfully!"},"404":{"description":"Data point doesn't exist!"}}}},"/notifs":{"get":{"summary":"Get notifications list","description":"Get list of all registered notifications","operationId":"getNotifs","responses":{"200":{"description":"Return NodeInfo object, class notifs were children contains list of notifications\n","schema":{"$ref":"#/definitions/NodeInfo"}},"500":{"description":"Getting notification list failed due to the server error.","schema":{"$ref":"#/definitions/Message"}}}},"post":{"summary":"Add new notification","description":"Subscribe for new notification","operationId":"subscribe","parameters":[{"in":"body","name":"notif","description":"New notification data","schema":{"$ref":"#/definitions/Notification"},"required":true}],"responses":{"201":{"description":"New notificaion added.","schema":{"$ref":"#/definitions/Notification"}},"400":{"description":"Source URL or URLs does not exist."},"500":{"description":"Registering notification failed due to the server error!","schema":{"$ref":"#/definitions/Message"}}}}},"/notifs/{notifID}":{"get":{"summary":"Get a specific notification.","operationId":"getNotif","parameters":[{"in":"path","name":"notifID","description":"The ID of the notification to retrieve.","type":"string","required":true}],"responses":{"200":{"description":"Return selected notification","schema":{"$ref":"#/definitions/Notification"}},"404":{"description":"Notification {notifID} doesn't exist!"}}},"delete":{"summary":"Remove a notification","description":"Unsubscribe selected notification","operationId":"unSubscribe","parameters":[{"in":"path","name":"notifID","description":"The ID of the notification to delete.","type":"string","required":true}],"responses":{"204":{"description":"Notification removed succesfully!"},"404":{"description":"Notification {notifID} doesn't exist!"}}}},"/events":{"get":{"summary":"Get event list","description":"Get list of all events","operationId":"getEvents","responses":{"200":{"description":"Return NodeInfo object, class notifs were children contains list of events\n","schema":{"$ref":"#/definitions/NodeInfo"}},"500":{"description":"Getting event list failed due to the server error.","schema":{"$ref":"#/definitions/Message"}}}}},"/events/{eventID}":{"get":{"summary":"Get a specific event.","operationId":"getEvent","parameters":[{"in":"path","name":"eventID","description":"The ID of the event to retrieve.","type":"string","required":true}],"responses":{"200":{"description":"Return selected event.","schema":{"$ref":"#/definitions/Event"}},"404":{"description":"Event {eventID} doesn't exist!"}}}},"/events/{eventID}/info":{"get":{"summary":"Get a specific information about event.","operationId":"getEventInfo","parameters":[{"in":"path","name":"eventID","description":"The ID of the event to retrieve.","type":"string","required":true}],"responses":{"200":{"description":"Return selected event.","schema":{"$ref":"#/definitions/EventInfo"}},"404":{"description":"Event {eventID} doesn't exist!"}}}},"/events/{eventID}/notifs":{"get":{"summary":"Get notifications list","description":"Get list of all registered notifications","operationId":"getEventNotifs","parameters":[{"in":"path","name":"eventID","description":"The ID of the event to retrieve.","type":"string","required":true}],"responses":{"200":{"description":"Return NodeInfo object, class notifs were children contains list of notifications\nrelated to selected event.\n","schema":{"$ref":"#/definitions/NodeInfo"}},"500":{"description":"Getting notification list failed due to the server error.","schema":{"$ref":"#/definitions/Message"}}}},"post":{"summary":"Add new notification","description":"Subscribe for new notification","operationId":"subscribe","parameters":[{"in":"path","name":"eventID","description":"The ID of the event to retrieve.","type":"string","required":true},{"in":"body","name":"notif","description":"New notification data","schema":{"$ref":"#/definitions/Notification"},"required":true}],"responses":{"201":{"description":"New notification added.","schema":{"$ref":"#/definitions/Notification"}},"400":{"description":"Input validation failed!"},"500":{"description":"Registering notification failed due to the server error!","schema":{"$ref":"#/definitions/Message"}}}}},"/events/{eventID}/notifs/{notifID}":{"get":{"summary":"Get a specific notification.","operationId":"getNotif","parameters":[{"in":"path","name":"eventID","description":"The ID of the event to retrieve.","type":"string","required":true},{"in":"path","name":"notifID","description":"The ID of the notification to retrieve.","type":"string","required":true}],"responses":{"200":{"description":"Return selected notification","schema":{"$ref":"#/definitions/Notification"}},"404":{"description":"Notification {notifID} doesn't exist!"}}},"delete":{"summary":"Remove a notification","description":"Unsubscribe selected notification","operationId":"unSubscribe","parameters":[{"in":"path","name":"eventID","description":"The ID of the event to retrieve.","type":"string","required":true},{"in":"path","name":"notifID","description":"The ID of the notification to delete.","type":"string","required":true}],"responses":{"204":{"description":"Notification removed succesfully!"},"404":{"description":"Notification {notifID} doesn't exist!"}}}},"/services":{"get":{"summary":"Get services list","description":"Get list of all services","operationId":"getServices","responses":{"200":{"description":"Return NodeInfo object, class notifs were children contains list of services\n","schema":{"$ref":"#/definitions/NodeInfo"}},"500":{"description":"Getting services list failed due to the server error.","schema":{"$ref":"#/definitions/Message"}}}},"post":{"summary":"Add new service","description":"Upload new file with services for the device","operationId":"addService","parameters":[{"in":"body","name":"newService","description":"New service to add.","schema":{"$ref":"#/definitions/NewService"},"required":true}],"responses":{"200":{"description":"New services added. See the */services* for current list of available services.\n"},"default":{"description":"Adding service failed, see the error message for more info!","schema":{"$ref":"#/definitions/Message"}}}}},"/services/{serviceID}":{"get":{"summary":"Get service info","description":"If service class is different than \"query\" this resource \nwill show the same information as a /INFO. Service with \n\"query\" class will show directly the data.\n","operationId":"getServiceInfo","parameters":[{"in":"path","name":"serviceID","description":"The ID of the service to retrieve.","type":"string","required":true}],"responses":{"200":{"description":"Return selected service.","schema":{"$ref":"#/definitions/ServiceInfo"}},"default":{"description":"Service {serviceID} doesn't exist!"}}},"post":{"summary":"Invoke service","description":"Invoke selected service. The result depends on class of the service.\n* **Process** - will respond with 201 if is invoked correctly\n* **Operation** - will respond directly the data.\n","operationId":"invokeService","parameters":[{"in":"path","name":"serviceID","description":"The ID of the service to invoke.","type":"string","required":true},{"in":"body","name":"params","description":"JSON object parameters","schema":{"$ref":"#/definitions/JSONObject"}}],"responses":{"200":{"description":"Service invoked succesfully."},"201":{"description":"Process was invoked corretly."},"400":{"description":"Invoking service failed. See response message for more information","schema":{"$ref":"#/definitions/Message"}},"default":{"description":"Service {serviceID} doesn't exist!"}}}},"/services/{serviceID}/info":{"get":{"summary":"Get a specific information about service.","operationId":"getServiceInfo","parameters":[{"in":"path","name":"serviceID","description":"The ID of the service to retrieve.","type":"string","required":true}],"responses":{"200":{"description":"Return selected service.","schema":{"$ref":"#/definitions/ServiceInfo"}},"default":{"description":"Service {serviceID} doesn't exist!"}}}},"/services/{serviceID}/notifs":{"get":{"summary":"Get notifications list","description":"Get list of all registered notifications","operationId":"getServiceNotifs","parameters":[{"in":"path","name":"serviceID","description":"The ID of the service to retrieve.","type":"string","required":true}],"responses":{"200":{"description":"Return NodeInfo object, class notifs were children contains list of notifications\nrelated to selected service.\n","schema":{"$ref":"#/definitions/NodeInfo"}},"500":{"description":"Getting notification list failed due to the server error.","schema":{"$ref":"#/definitions/Message"}}}},"post":{"summary":"Add new notification","description":"Subscribe for new notification","operationId":"subscribe","parameters":[{"in":"path","name":"serviceID","description":"Path to data point separated by slash or void for root.","type":"string","required":true},{"in":"body","name":"notif","description":"New notification data","schema":{"$ref":"#/definitions/Notification"},"required":true}],"responses":{"201":{"description":"New notification added."},"400":{"description":"Source URL or URLs does not exist."},"500":{"description":"Registering notification failed due to the server error!","schema":{"$ref":"#/definitions/Message"}}}}},"/services/{serviceID}/notifs/{notifID}":{"get":{"summary":"Get a specific notification.","operationId":"getNotif","parameters":[{"in":"path","name":"serviceID","description":"The ID of the service to retrieve.","type":"string","required":true},{"in":"path","name":"notifID","description":"The ID of the notification to retrieve.","type":"string","required":true}],"responses":{"200":{"description":"Return selected notification","schema":{"$ref":"#/definitions/Notification"}},"default":{"description":"Notification {notifID} doesn't exist!"}}},"delete":{"summary":"Remove a notification","description":"Unsubscribe selected notification","operationId":"unSubscribe","parameters":[{"in":"path","name":"serviceID","description":"The ID of the service to retrieve.","type":"string","required":true},{"in":"path","name":"notifID","description":"The ID of the notification to delete.","type":"string","required":true}],"responses":{"204":{"description":"Notification removed succesfully!"},"default":{"description":"Notification {notifID} doesn't exist!"}}}}},"definitions":{"Message":{"description":"An object response or error message. It is based on the <a href='http://www.restapitutorial.com/'>REST API Tutorial</a>","required":["code","status","message"],"properties":{"code":{"type":"integer","description":"Contains the HTTP response status code as an integer."},"status":{"enum":["success","fail","error"],"description":"Contains the text: 'success', 'fail', or 'error'. Where 'fail' is for HTTP status response values from 500-599, 'error' is for statuses 400-499, and 'success' is for everything else (e.g. 1XX, 2XX and 3XX responses)"},"message":{"type":"string","description":"Only used for 'fail' and 'error' statuses to contain the error message. For internationalization (i18n) purposes, this could contain a message number or code, either alone or contained within delimiters"},"data":{"type":"string","description":"Contains the response body. In the case of 'error' or 'fail' statuses, this contains the cause, or exception name."}}},"Links":{"description":"An object describing a storage for links","required":["self"],"properties":{"self":{"type":"string","description":"URL which points to current resource"},"info":{"type":"string","description":"(Optional) URL which points to info resource"},"notifs":{"type":"string","description":"(Optional) URL which points to list of notifications for current resource"},"parent":{"type":"string","description":"(Optional) URL which points to the parent resource"}}},"DataValue":{"description":"An object describing value of the data point","required":["v"],"properties":{"v":{"type":"string","description":"Value where type of the value is specified in DataInfo object"},"q":{"enum":["BAD","UNCERTAIN","GOOD"],"default":"GOOD","description":"Quality (BAD, UNCERTAIN, GOOD)"},"t":{"type":"integer","format":"int64","description":"Timestamp in milliseconds from UNIX Epoch see [UNIX Time](http://en.wikipedia.org/wiki/Unix_time)"}}},"DataInfo":{"description":"An object describing a data point in the data point tree","required":["id","links","class"],"properties":{"id":{"type":"string","description":"ID of the data node"},"links":{"$ref":"#/definitions/Links"},"class":{"type":"string","default":"data","description":"Class of the current resource."},"value":{"type":"string","description":"URL link to value"},"type":{"enum":["boolean","integer","number","string"],"default":"string","description":"Describes type of the value as a subset of <a href='http://json-schema.org/latest/json-schema-core.html anchor8'> JSON Schema primitive types </a>"},"mode":{"enum":["R","W","RW"],"default":"R"}}},"NodeInfo":{"description":"An object describing a node in a eScopRTU tree","required":["id","links","class"],"properties":{"id":{"type":"string","description":"ID of the node"},"links":{"$ref":"#/definitions/Links","description":"An object with links, at least with self URL which point to that resource"},"class":{"type":"string","default":"node","description":"Class of the current resource."},"children":{"$ref":"#/definitions/NodeInfo","description":"An array of child nodes, which should contain at least the same information as NodeInfo"}},"discriminator":"id"},"Notification":{"description":"An object describing a general notification.","allOf":[{"$ref":"#/definitions/NodeInfo"},{"properties":{"sourceUrl":{"type":"string","description":"URL of local resource. It can point to any value that one can call GET function. URL can be in 'full' format including the server address (ie. 'http://server:port/data/point1') or in 'local' format ('/data/point1')"},"destUrl":{"type":"string","description":"URL of remote resource. It can point to any value that one can call POST function. URL MUST be in 'full' format including the server address (ie. 'http://destServer:port/services/notify')"},"minUpdatePeriod":{"type":"number","description":"Minimal update period in seconds. Default every 1 second."},"maxUpdatePeriod":{"type":"number","description":"Maximal update period in seconds. Default every 60 seconds."},"type":{"enum":["change","periodical"],"default":"change","description":"Periodical will send the data every minUpdatePeriod. Change will send the data whenever any local resource changes."},"method":{"enum":["PUT","POST"],"default":"PUT","description":"HTTP method used during notification call."},"clientData":{"type":"string","description":"Arbitrary client object serialize to String representation. This object will be attached to every notification message"}},"required":["destUrl"]}]},"Event":{"description":"An object describing live event data","required":["id","senderID"],"properties":{"id":{"type":"string","description":"Case sensitive name of the event."},"senderID":{"type":"string","description":"Case sensitive name of the device."},"lastEmit":{"type":"integer","format":"int64","description":"Timestamp in milliseconds from UNIX Epoch see [UNIX Time](http://en.wikipedia.org/wiki/Unix_time)"},"payload":{"description":"Each event can have different format of the data or follow some general scheme.","$ref":"#/definitions/JSONObject"}}},"EventInfo":{"description":"An object describing an event static information. ","required":["id","links","class"],"properties":{"id":{"type":"string","description":"ID of the event"},"links":{"$ref":"#/definitions/Links","description":"An object with links, at least with self URL which point to that resource"},"class":{"type":"string","default":"node","description":"Class of the current resource."},"schema":{"type":"string","description":"Schema describing the DATA of an event. Probably JSON SCHEMA or Swagger model"}}},"JSONObject":{"description":"Schema for empty JSON object"},"NewService":{"description":"New service to add","required":["file","content"],"properties":{"file":{"type":"string","description":"BASE64 encoded file with service definitions."},"content":{"enum":["STL","JS"],"default":"STL","description":"Specification of the content of service file."}}},"ServiceInfo":{"description":"An object describing an service static information. ","required":["id","links","class"],"properties":{"id":{"type":"string","description":"ID of the service"},"links":{"$ref":"#/definitions/Links","description":"An object with links, at least with self URL which point to that resource"},"class":{"enum":["operation","process","query"],"default":"operation","description":"Class of the current service."},"schema":{"type":"string","description":"Schema describing the result of a service. Probably JSON SCHEMA or Swagger model"}}}}}